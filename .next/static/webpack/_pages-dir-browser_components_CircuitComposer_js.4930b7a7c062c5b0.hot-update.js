"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_pages-dir-browser_components_CircuitComposer_js",{

/***/ "(pages-dir-browser)/./components/QubitLine.js":
/*!*********************************!*\
  !*** ./components/QubitLine.js ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dnd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dnd */ \"(pages-dir-browser)/./node_modules/react-dnd/dist/index.js\");\n/* harmony import */ var _context_CircuitContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../context/CircuitContext */ \"(pages-dir-browser)/./context/CircuitContext.js\");\n\nvar _s = $RefreshSig$();\n\n\nconst QubitLine = (param)=>{\n    let { index } = param;\n    _s();\n    const { state, dispatch } = (0,_context_CircuitContext__WEBPACK_IMPORTED_MODULE_1__.useCircuit)();\n    const row = state.circuit[index];\n    const handleContextMenu = (e)=>{\n        e.preventDefault();\n        if (state.qubits > 1 && confirm(\"Remove qubit \".concat(index, \"?\"))) {\n            dispatch({\n                type: 'REMOVE_QUBIT'\n            });\n        }\n    };\n    // Make the entire qubit line a drop target\n    const [{ isOver }, drop] = (0,react_dnd__WEBPACK_IMPORTED_MODULE_2__.useDrop)({\n        \"QubitLine.useDrop\": ()=>({\n                accept: 'GATE',\n                drop: ({\n                    \"QubitLine.useDrop\": (item, monitor)=>{\n                        const offset = monitor.getClientOffset();\n                        const lineRect = document.getElementById(\"qubit-line-\".concat(index)).getBoundingClientRect();\n                        const x = offset.x - lineRect.left;\n                        const time = Math.floor(x / 50); // Assuming each time slot is 50px wide\n                        console.log(\"Dropping \".concat(item.type, \" on q[\").concat(index, \"] at time \").concat(time));\n                        console.log('Current circuit state:', state.circuit);\n                        if (time >= 0 && time < row.length) {\n                            const removes = [];\n                            const adds = [];\n                            // Check for an existing gate at the current position\n                            const existingGate = state.circuit[index][time];\n                            console.log(\"Existing gate at q[\".concat(index, \"][\").concat(time, \"]:\"), existingGate);\n                            // Clear any existing gate at the current position\n                            if (existingGate) {\n                                if (existingGate.type === 'CNOT') {\n                                    const targetQubit = existingGate.targetQubit;\n                                    console.log(\"Removing CNOT at q[\".concat(index, \"][\").concat(time, \"] and CNOT_TARGET at q[\").concat(targetQubit, \"][\").concat(time, \"]\"));\n                                    if (targetQubit !== undefined && targetQubit < state.qubits) {\n                                        removes.push({\n                                            qubit: targetQubit,\n                                            time\n                                        });\n                                    }\n                                    removes.push({\n                                        qubit: index,\n                                        time\n                                    });\n                                } else if (existingGate.type === 'CNOT_TARGET') {\n                                    // Find the corresponding CNOT gate\n                                    let controlQubit = -1;\n                                    for(let q = 0; q < state.qubits; q++){\n                                        const gate = state.circuit[q][time];\n                                        if ((gate === null || gate === void 0 ? void 0 : gate.type) === 'CNOT' && gate.targetQubit === index) {\n                                            controlQubit = q;\n                                            break;\n                                        }\n                                    }\n                                    if (controlQubit !== -1) {\n                                        console.log(\"Removing CNOT at q[\".concat(controlQubit, \"][\").concat(time, \"] and CNOT_TARGET at q[\").concat(index, \"][\").concat(time, \"]\"));\n                                        removes.push({\n                                            qubit: controlQubit,\n                                            time\n                                        });\n                                    }\n                                    removes.push({\n                                        qubit: index,\n                                        time\n                                    });\n                                } else {\n                                    console.log(\"Removing gate at q[\".concat(index, \"][\").concat(time, \"]\"));\n                                    removes.push({\n                                        qubit: index,\n                                        time\n                                    });\n                                }\n                            }\n                            // Add the new gate\n                            if (item.type === 'H') {\n                                console.log(\"Adding H gate at q[\".concat(index, \"][\").concat(time, \"]\"));\n                                adds.push({\n                                    qubit: index,\n                                    time,\n                                    type: 'H'\n                                });\n                            } else if (item.type === 'CNOT') {\n                                if (index < state.qubits - 1) {\n                                    const targetQubit = index + 1;\n                                    const targetExistingGate = state.circuit[targetQubit][time];\n                                    console.log(\"Target qubit q[\".concat(targetQubit, \"][\").concat(time, \"] has gate:\"), targetExistingGate);\n                                    // Clear any existing gate on the target qubit\n                                    if (targetExistingGate) {\n                                        if (targetExistingGate.type === 'CNOT') {\n                                            const nextTargetQubit = targetExistingGate.targetQubit;\n                                            console.log(\"Removing CNOT at q[\".concat(targetQubit, \"][\").concat(time, \"] and CNOT_TARGET at q[\").concat(nextTargetQubit, \"][\").concat(time, \"]\"));\n                                            if (nextTargetQubit !== undefined && nextTargetQubit < state.qubits) {\n                                                removes.push({\n                                                    qubit: nextTargetQubit,\n                                                    time\n                                                });\n                                            }\n                                            removes.push({\n                                                qubit: targetQubit,\n                                                time\n                                            });\n                                        } else if (targetExistingGate.type === 'CNOT_TARGET') {\n                                            let controlQubit = -1;\n                                            for(let q = 0; q < state.qubits; q++){\n                                                const gate = state.circuit[q][time];\n                                                if ((gate === null || gate === void 0 ? void 0 : gate.type) === 'CNOT' && gate.targetQubit === targetQubit) {\n                                                    controlQubit = q;\n                                                    break;\n                                                }\n                                            }\n                                            if (controlQubit !== -1) {\n                                                console.log(\"Removing CNOT at q[\".concat(controlQubit, \"][\").concat(time, \"] and CNOT_TARGET at q[\").concat(targetQubit, \"][\").concat(time, \"]\"));\n                                                removes.push({\n                                                    qubit: controlQubit,\n                                                    time\n                                                });\n                                            }\n                                            removes.push({\n                                                qubit: targetQubit,\n                                                time\n                                            });\n                                        } else {\n                                            console.log(\"Removing gate at q[\".concat(targetQubit, \"][\").concat(time, \"]\"));\n                                            removes.push({\n                                                qubit: targetQubit,\n                                                time\n                                            });\n                                        }\n                                    }\n                                    // Add the new CNOT gate\n                                    console.log(\"Adding CNOT gate at q[\".concat(index, \"][\").concat(time, \"] with target q[\").concat(targetQubit, \"]\"));\n                                    adds.push({\n                                        qubit: index,\n                                        time,\n                                        type: 'CNOT',\n                                        targetQubit: targetQubit\n                                    });\n                                } else {\n                                    console.log(\"Cannot place CNOT on q[\".concat(index, \"] - no target qubit available\"));\n                                }\n                            }\n                            // Dispatch all changes in a single action\n                            if (removes.length > 0 || adds.length > 0) {\n                                console.log('Dispatching UPDATE_GATE with:', {\n                                    removes,\n                                    adds\n                                });\n                                dispatch({\n                                    type: 'UPDATE_GATE',\n                                    payload: {\n                                        removes,\n                                        adds\n                                    }\n                                });\n                            }\n                        } else {\n                            console.log(\"Invalid time slot: \".concat(time));\n                        }\n                    }\n                })[\"QubitLine.useDrop\"],\n                collect: ({\n                    \"QubitLine.useDrop\": (monitor)=>({\n                            isOver: !!monitor.isOver()\n                        })\n                })[\"QubitLine.useDrop\"]\n            })\n    }[\"QubitLine.useDrop\"]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        onContextMenu: handleContextMenu,\n        style: {\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: '10px'\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                style: {\n                    width: '50px'\n                },\n                children: [\n                    \"q[\",\n                    index,\n                    \"]\"\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\elang\\\\OneDrive\\\\Desktop\\\\quantum_computing\\\\components\\\\QubitLine.js\",\n                lineNumber: 134,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: drop,\n                id: \"qubit-line-\".concat(index),\n                style: {\n                    position: 'relative',\n                    width: '260px',\n                    height: '50px',\n                    backgroundColor: isOver ? '#f0f0f0' : 'transparent'\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    width: \"260\",\n                    height: \"50\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                            x1: \"0\",\n                            y1: \"25\",\n                            x2: \"260\",\n                            y2: \"25\",\n                            stroke: \"#006A71\",\n                            strokeWidth: \"2\",\n                            style: {\n                                filter: 'drop-shadow(0 0 4px #006A71)'\n                            }\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\elang\\\\OneDrive\\\\Desktop\\\\quantum_computing\\\\components\\\\QubitLine.js\",\n                            lineNumber: 146,\n                            columnNumber: 11\n                        }, undefined),\n                        row.map((gate, time)=>(gate === null || gate === void 0 ? void 0 : gate.type) === 'CNOT' ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                                x1: time * 50 + 25,\n                                y1: \"25\",\n                                x2: time * 50 + 25,\n                                y2: \"75\",\n                                stroke: \"#48A6A7\",\n                                strokeWidth: \"2\",\n                                style: {\n                                    filter: 'drop-shadow(0 0 4px #48A6A7)'\n                                }\n                            }, time, false, {\n                                fileName: \"C:\\\\Users\\\\elang\\\\OneDrive\\\\Desktop\\\\quantum_computing\\\\components\\\\QubitLine.js\",\n                                lineNumber: 157,\n                                columnNumber: 15\n                            }, undefined) : null),\n                        row.map((gate, time)=>gate ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                                transform: \"translate(\".concat(time * 50 + 10, \", 10)\"),\n                                children: [\n                                    gate.type === 'H' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"rect\", {\n                                        x: \"0\",\n                                        y: \"0\",\n                                        width: \"30\",\n                                        height: \"30\",\n                                        fill: \"#006A71\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\elang\\\\OneDrive\\\\Desktop\\\\quantum_computing\\\\components\\\\QubitLine.js\",\n                                        lineNumber: 173,\n                                        columnNumber: 19\n                                    }, undefined),\n                                    gate.type === 'CNOT' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                        cx: \"15\",\n                                        cy: \"15\",\n                                        r: \"5\",\n                                        fill: \"black\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\elang\\\\OneDrive\\\\Desktop\\\\quantum_computing\\\\components\\\\QubitLine.js\",\n                                        lineNumber: 176,\n                                        columnNumber: 19\n                                    }, undefined),\n                                    gate.type === 'CNOT_TARGET' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                        cx: \"15\",\n                                        cy: \"15\",\n                                        r: \"10\",\n                                        fill: \"none\",\n                                        stroke: \"#e94e77\",\n                                        strokeWidth: \"2\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\elang\\\\OneDrive\\\\Desktop\\\\quantum_computing\\\\components\\\\QubitLine.js\",\n                                        lineNumber: 179,\n                                        columnNumber: 19\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"text\", {\n                                        x: \"7\",\n                                        y: \"20\",\n                                        fontSize: \"12\",\n                                        fill: gate.type === 'H' ? 'white' : 'black',\n                                        children: gate.type === 'H' ? 'H' : gate.type === 'CNOT' ? '●' : '⊕'\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\elang\\\\OneDrive\\\\Desktop\\\\quantum_computing\\\\components\\\\QubitLine.js\",\n                                        lineNumber: 181,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, time, true, {\n                                fileName: \"C:\\\\Users\\\\elang\\\\OneDrive\\\\Desktop\\\\quantum_computing\\\\components\\\\QubitLine.js\",\n                                lineNumber: 171,\n                                columnNumber: 15\n                            }, undefined) : null)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\elang\\\\OneDrive\\\\Desktop\\\\quantum_computing\\\\components\\\\QubitLine.js\",\n                    lineNumber: 145,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\elang\\\\OneDrive\\\\Desktop\\\\quantum_computing\\\\components\\\\QubitLine.js\",\n                lineNumber: 135,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\elang\\\\OneDrive\\\\Desktop\\\\quantum_computing\\\\components\\\\QubitLine.js\",\n        lineNumber: 130,\n        columnNumber: 5\n    }, undefined);\n};\n_s(QubitLine, \"hwPCy2jb8ZfAaC2HxaxUgbi6aPo=\", false, function() {\n    return [\n        _context_CircuitContext__WEBPACK_IMPORTED_MODULE_1__.useCircuit,\n        react_dnd__WEBPACK_IMPORTED_MODULE_2__.useDrop\n    ];\n});\n_c = QubitLine;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (QubitLine);\nvar _c;\n$RefreshReg$(_c, \"QubitLine\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/QubitLine.js\n"));

/***/ })

});